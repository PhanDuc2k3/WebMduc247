import axiosClient from "./axiosClient";
import type { ProductType } from "../types/product";

const productApi = {
  // üü¢ T·∫°o s·∫£n ph·∫©m m·ªõi
  createProduct: (data: FormData) =>
    axiosClient.post("/api/products", data, {
      headers: { "Content-Type": "multipart/form-data" },
    }),

  // üü° L·∫•y danh s√°ch s·∫£n ph·∫©m (ph√¢n trang, l·ªçc, s·∫Øp x·∫øp)
  getProducts: (params?: Record<string, any>) =>
    axiosClient.get("/api/products", { params }),

  // ‚≠ê L·∫•y s·∫£n ph·∫©m n·ªïi b·∫≠t
  getFeaturedProducts: () => axiosClient.get("/api/products/featured"),

  // üîç L·∫•y chi ti·∫øt s·∫£n ph·∫©m theo ID
  getProductById: (id: string) => axiosClient.get(`/api/products/${id}`),

  // üë§ L·∫•y s·∫£n ph·∫©m c·ªßa ng∆∞·ªùi b√°n hi·ªán t·∫°i
  getMyProducts: () => axiosClient.get("/api/products/my-products"),

  // üè™ L·∫•y s·∫£n ph·∫©m theo c·ª≠a h√†ng
  getProductsByStore: (storeId: string) =>
    axiosClient.get(`/api/products/store/${storeId}/products`),

  // ‚úèÔ∏è C·∫≠p nh·∫≠t s·∫£n ph·∫©m
  updateProduct: (id: string, data: FormData) =>
    axiosClient.put(`/api/products/${id}`, data, {
      headers: { "Content-Type": "multipart/form-data" },
    }),

  // ‚ùå X√≥a (·∫©n) s·∫£n ph·∫©m
  deleteProduct: (id: string) => axiosClient.delete(`/api/products/${id}`),

  // üëÅÔ∏è‚Äçüó®Ô∏è TƒÉng l∆∞·ª£t xem s·∫£n ph·∫©m
  increaseView: (id: string) => axiosClient.patch(`/api/products/${id}/view`),

  // üìä L·∫•y th·ªëng k√™ l∆∞·ª£t xem
  getViewsStats: (storeId: string, range = 7) =>
    axiosClient.get("/api/products/views-stats", {
      params: { storeId, range },
    }),

  // üßÆ L·∫•y s·ªë l∆∞·ª£ng s·∫£n ph·∫©m theo danh m·ª•c
  getProductCountByCategory: () =>
    axiosClient.get("/api/products/count-by-category"),
};

export default productApi;
