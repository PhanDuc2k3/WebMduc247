// types/product.ts

export interface Specification {
  key: string;
  value: string;
}

// üîπ Option ph·ª• cho t·ª´ng m√†u (VD: dung l∆∞·ª£ng, size, tr·ªçng l∆∞·ª£ng...)
export interface VariationOption {
  name: string;            // VD: "128GB" | "XL" | "500g"
  stock: number;           // s·ªë l∆∞·ª£ng t·ªìn kho cho option n√†y
  additionalPrice: number; // gi√° c·ªông th√™m so v·ªõi price g·ªëc
}

// üîπ Bi·∫øn th·ªÉ ch√≠nh (m√†u s·∫Øc ho·∫∑c thu·ªôc t√≠nh cha)
export interface Variation {
  color: string;              // VD: "Titan Xanh", "ƒê·ªè", "ƒêen"
  options: VariationOption[]; // danh s√°ch option con
}

export interface ProductType {
  _id: string;
  name: string;
  description: string;
  price: number;
  salePrice?: number;
  brand: string;
  category: string;
  subCategory: string;
  quantity: number;           // t·ªïng stock = sum(options.stock)
  soldCount: number;
  model: string;
  sku?: string;
  variations?: Variation[];   // ‚úÖ thay v√¨ any[]
  images: string[];
  specifications: Specification[];
  rating: number;
  reviewsCount: number;
  tags: string[];
  seoTitle: string;
  seoDescription: string;
  keywords: string[];
  isFeatured: boolean;
  viewsCount: number;
  isActive: boolean;
  store: string; // store id
}

export interface FormDataType {
  name: string;
  description: string;
  price: string | number;
  originalPrice: string | number;
  brand: string;
  category: string;
  subCategory: string;
  model: string;
  features: string[];
  specifications: Specification[];
  seoTitle: string;
  seoDescription: string;
  tags: string[];
  mainImage: File | null;
  mainImagePreview: string | null;
  subImages: File[];
  subImagesPreview: string[];
  storeId?: string;

  // ‚úÖ th√™m variations ƒë·ªÉ FE qu·∫£n l√Ω
  variations: Variation[];
}
