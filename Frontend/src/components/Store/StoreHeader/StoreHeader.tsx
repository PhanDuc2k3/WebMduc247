import React, { useEffect, useState } from "react";

interface Store {
  name: string;
  description: string;
  storeAddress: string;
  logoUrl: string;
  bannerUrl?: string;
  contactPhone?: string;
  contactEmail?: string;
  category: string;
  customCategory?: string;
  rating?: number;
  products?: number;
  followers?: number;
  responseRate?: number;
  responseTime?: string;
  joinDate?: string;
}

const StoreInfo: React.FC<{ storeId: string }> = ({ storeId }) => {
  const [store, setStore] = useState<Store | null>(null);

  // ‚úÖ Call API
  useEffect(() => {
    const fetchStore = async () => {
      try {
        const res = await fetch(`http://localhost:5000/api/stores/${storeId}`);
        const data = await res.json();
        console.log("Store Info nh·∫≠n:", data);
        setStore(data.store); // nh·ªõ backend tr·∫£ { store: {...} }
      } catch (error) {
        console.error("L·ªói fetch store:", error);
      }
    };
    fetchStore();
  }, [storeId]);

  if (!store) return <p>ƒêang t·∫£i th√¥ng tin c·ª≠a h√†ng...</p>;

  return (
    <div className="w-full relative">
      {/* Banner full width */}
      {store.bannerUrl && (
        <div className="w-screen relative left-1/2 right-1/2 -ml-[50vw] -mr-[50vw] h-48 md:h-64 overflow-hidden">
          <img
            src={store.bannerUrl}
            alt="Store Banner"
            className="w-full h-full object-cover"
          />
        </div>
      )}

      {/* Container ch√≠nh ƒë√® l√™n banner */}
      <div className="max-w-6xl mx-auto relative -mt-12">
        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex justify-between items-start">
            {/* Tr√°i: logo + th√¥ng tin */}
            <div className="flex gap-4">
              <img
                src={store.logoUrl}
                alt={store.name}
                className="w-20 h-20 rounded-full border-4 border-white shadow-lg object-cover"
              />
              <div>
                <div className="flex items-center gap-2">
                  <h2 className="text-lg font-semibold">{store.name}</h2>
                  <span className="text-xs bg-blue-100 text-blue-600 px-2 py-0.5 rounded">
                    Mall
                  </span>
                  <span className="text-xs bg-gray-100 text-gray-700 px-2 py-0.5 rounded">
                    Ch√≠nh h√£ng
                  </span>
                </div>
                <p className="text-sm text-gray-600">{store.description}</p>
                <p className="text-sm text-gray-500 mt-1">
                  üìç {store.storeAddress}
                </p>
              </div>
            </div>

            {/* Ph·∫£i: button */}
            <div className="flex gap-2">
              <button className="bg-blue-500 text-white px-3 py-1.5 rounded hover:bg-blue-600 text-sm">
                Chat ngay
              </button>
              <button className="border px-3 py-1.5 rounded hover:bg-gray-100 text-sm">
                Theo d√µi
              </button>
            </div>
          </div>

          {/* Stats h√†ng ngang */}
          <div className="grid grid-cols-3 md:grid-cols-6 gap-4 text-sm text-gray-700 mt-6 text-center">
            <div>
              ‚≠ê {(store.rating ?? 0).toFixed(1)}
              <p className="text-gray-500">ƒê√°nh gi√°</p>
            </div>
            <div>
              {store.products ?? 0}
              <p className="text-gray-500">S·∫£n ph·∫©m</p>
            </div>
            <div>
              {(store.followers ?? 0).toLocaleString()}
              <p className="text-gray-500">Ng∆∞·ªùi theo d√µi</p>
            </div>
            <div>
              {store.responseRate ?? 0}%
              <p className="text-gray-500">T·ªâ l·ªá ph·∫£n h·ªìi</p>
            </div>
            <div>
              {store.responseTime ?? "‚Äî"}
              <p className="text-gray-500">Ph·∫£n h·ªìi</p>
            </div>
            <div>
              {store.joinDate ?? "‚Äî"}
              <p className="text-gray-500">Tham gia</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default StoreInfo;
